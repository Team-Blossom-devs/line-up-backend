plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.blossom'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Redis 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// thymeleaf 추가
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// QR 코드 생성을 위한 google zxing 추가
	implementation 'com.google.zxing:core:3.5.2'
	implementation 'com.google.zxing:javase:3.5.2'

	// Query DSL 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// @ConfigurationProperties 사용 위함
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

	//-- Query DSL generated path --//
	def querydslDir = "src/main/generated"

	sourceSets {
		main.java.srcDirs += [ querydslDir ]
	}

	tasks.withType(JavaCompile) {
		options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
	}

	clean.doLast {
		file(querydslDir).deleteDir()
	}
	//----//

	tasks.named('test') {
		useJUnitPlatform()
}
